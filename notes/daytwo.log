Python 2.7.5 (v2.7.5:ab05e7dd2788, May 13 2013, 13:18:45) 
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin
Type "copyright", "credits" or "license()" for more information.
>>> 123 + 456
579
>>> 123 * 456
56088
>>> 32 / 6
5
>>> 32 / 6.
5.333333333333333
\
>>> from __future__ import division
>>> 32 / 6
5.333333333333333
>>> 32 % 6
2
>>> 2 ** 5
32
>>> 2 ^ 5
7
>>> bin(49)
'0b110001'
>>> hex(49)
'0x31'
>>> oct(49)
'061'
>>> 
>>> 0b101
5
>>> 0x10
16
>>> 0o10
8
>>> 010
8
>>> 
>>> 
>>> 25 + 010 + 15
48
>>> 
>>> bin(49)
'0b110001'
>>> bin(34)
'0b100010'
>>> bin(49 & 34)
'0b100000'
>>> bin(49 | 34)
'0b110011'
>>> bin(49 ^ 34)
'0b10011'
>>> bin(49 & ~34)
'0b10001'
>>> 
>>> 
>>> bin(49)
'0b110001'
>>> bin(49 >> 1)
'0b11000'
>>> bin(49 >> 3)
'0b110'
>>> bin(49 << 1)
'0b1100010'
>>> bin(49 << 2)
'0b11000100'
>>> # and or xor not lshift rshift
>>> #  &  |   ^   ~     <<    >>
>>> 
>>> 
>>> 
>>> 49 & 1
1
>>> 49 % 2
1
>>> 
>>> 
>>> 49 >> 1
24
>>> 49 // 2
24
>>> 
>>> 
>>> 49 << 1
98
>>> 49 * 2
98
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 10
10
>>> 1.1
1.1
>>> 10 + 3j
(10+3j)
>>> 
>>> 
>>> 
>>> a = 3 + 4j
>>> b = 2 * 5j
>>> (3 * 2 - 4 * 5) + (3 * 5 + 4 * 2) * 1j
(-14+23j)
>>> a * b
(-40+30j)
>>> (3 * 2 - 4 * 5) + (3 * 5 + 4 * 2) * 1j
(-14+23j)
>>> 
>>> 
>>> b = 2 + 5j
>>> 
>>> 
>>> a * b
(-14+23j)
>>> a * b
(-14+23j)
>>> 
>>> 
>>> 
>>> 10 + 5
15
>>> _ * 2
30
>>> _ * 2
60
>>> type(_)
<type 'int'>
>>> 
>>> 
>>> 
>>> 3 + 5
8
>>> _ * 10
80
>>> _ * 10
800
>>> _ * 10
8000
>>> type(_)
<type 'int'>
>>> 
>>> True
True
>>> False
False
>>> type(_)
<type 'bool'>
>>> 
>>> issubclass(bool, int)
True
>>> isinstance(True, int)
True
>>> isinstance(False, int)
True
>>> 5 + True
6
>>> 8 * False
0
>>> sum([True, True, False, True])
3
>>> 
>>> 
>>> 
>>> # Singleton
>>> 
>>> None
>>> 3
3
>>> None * 4

Traceback (most recent call last):
  File "<pyshell#105>", line 1, in <module>
    None * 4
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
>>> 
>>> 
>>> # Singleton
>>> # Doesn't display
>>> # None is less than everything else
>>> None < 'abc'
True
>>> None < -24
True
>>> None < float('-Inf')
True
>>> 
>>> 
>>> 
>>> 
>>> s = ['good', 'morning', 'san', 'jose']
>>> s[0]
'good'
>>> s[1]
'morning'
>>> a, b, c, d = s
>>> a
'good'
>>> b
'morning'
>>> c
'san'
>>> e

Traceback (most recent call last):
  File "<pyshell#125>", line 1, in <module>
    e
NameError: name 'e' is not defined
>>> d
'jose'
>>> 
>>> 
>>> 
>>> s = ['good', 'morning', 'san', 'jose']
>>> a, b, c, d = s
>>> 
>>> a = s[0]
>>> b = s[1]
>>> 
>>> 
>>> len(s)
4
>>> 
>>> s[len(s) - 1]
'jose'
>>> s[-1]
'jose'
>>> s[len(s) - 2]
'san'
>>> s[-2]
'san'
>>> 
>>> 
>>> [s[0], s[1]]
['good', 'morning']
>>> s[0:2]
['good', 'morning']
>>> # Slicing uses half-open intervals
>>> # zero in included and the two is excluded
>>> 
>>> 

>>> 18 - 16
2
>>> 18 - 16 + 1
3
>>> 
>>> 19 - 16
3
>>> 
>>> s[0:2]
['good', 'morning']
>>> s[1:3]
['morning', 'san']
>>> 
>>> 
>>> s[0:2] + s[2:3]
['good', 'morning', 'san']
>>> s[0:3] == s[0:2] + s[2:3]    # slice invariant
True
>>> 
>>> for x in [0, 1, 2, 3, 4, 5]:
	print x, x**2

	
0 0
1 1
2 4
3 9
4 16
5 25
>>> range(40)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]
>>> for x in range(40):
	print x, x**2

	
0 0
1 1
2 4
3 9
4 16
5 25
6 36
7 49
8 64
9 81
10 100
11 121
12 144
13 169


Traceback (most recent call last):
  File "<pyshell#168>", line 2, in <module>
    print x, x**2
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/idlelib/PyShell.py", line 1325, in write
    return self.shell.write(s, self.tags)
KeyboardInterrupt
>>> 
>>> 
>>> 
>>> 
>>> range(10)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> range(2, 10)
[2, 3, 4, 5, 6, 7, 8, 9]
>>> range(2, 10, 3)
[2, 5, 8]
>>> # START STOP STEP
>>> 
>>> 
>>> 
>>> range(0, 10, 2)
[0, 2, 4, 6, 8]
>>> 
>>> 
>>> s = 'the tale of two cities'
>>> s[-1]
's'
>>> s[0:3]
'the'
>>> s[:3]
'the'
>>> 
>>> s[3:len(s)]
' tale of two cities'
>>> s[3:]
' tale of two cities'
>>> 
>>> 
>>> s[:3] + s[3:]
'the tale of two cities'
>>> s[:3] + s[3:] == s[:] == s
True
>>> x = 10
>>> 
>>> 3 < x  and x < 20
True
>>> 3 < x < 20
True
>>> 3 < x < 20 > 12 == 6 + 6 > 0
True
>>> 
>>> 
>>> s[:3]+s[3:]
'the tale of two cities'
>>> 3 + 8
11
>>> 3+8
11
>>> bin (49)
'0b110001'
>>> 
>>> 3+8
11
>>> 3 + 2*3**2 + 5*6**7
1399701
>>> 3 + 2 * 3 ** 2 + 5 * 6 ** 7
1399701
>>> 
>>> n = 42
>>> type(n)
<type 'int'>
>>> dir(n)
['__abs__', '__add__', '__and__', '__class__', '__cmp__', '__coerce__', '__delattr__', '__div__', '__divmod__', '__doc__', '__float__', '__floordiv__', '__format__', '__getattribute__', '__getnewargs__', '__hash__', '__hex__', '__index__', '__init__', '__int__', '__invert__', '__long__', '__lshift__', '__mod__', '__mul__', '__neg__', '__new__', '__nonzero__', '__oct__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdiv__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'bit_length', 'conjugate', 'denominator', 'imag', 'numerator', 'real']
>>> 
>>> 
>>> 
>>> 
>>> n = 42
>>> s = str(n)               # "stir" which short for string
>>> type(s)
<type 'str'>
>>> dir(s)
['__add__', '__class__', '__contains__', '__delattr__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__getslice__', '__gt__', '__hash__', '__init__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '_formatter_field_name_split', '_formatter_parser', 'capitalize', 'center', 'count', 'decode', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'index', 'isalnum', 'isalpha', 'isdigit', 'islower', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> t = list(s)
>>> t
['4', '2']
>>> type(t)
<type 'list'>
>>> dir(t)
['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__delslice__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getslice__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__setslice__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
>>> 
>>> t.sort()
>>> t.sort() == None
True
>>> 
>>> t
['2', '4']
>>> # If a function or method returns None,
>>> # it is a hint that the data mutated.
>>> 
>>> ''.joint(t)

Traceback (most recent call last):
  File "<pyshell#233>", line 1, in <module>
    ''.joint(t)
AttributeError: 'str' object has no attribute 'joint'
>>> ''.join(t)
'24'
>>> type(_)
<type 'str'>
>>> int(''.join(t))
24
>>> 
>>> 13 + 5
18
>>> _ * 10
180
>>> type(_)
<type 'int'>
>>> 
>>> 
>>> choice = raw_input('Choose an option: ')
Choose an option: GlobalThermoNuclearWar
>>> choice
'GlobalThermoNuclearWar'
>>> 
>>> 
>>> 30 + 40
70
>>> 
>>> choice = raw_input('Input an expression: ')
Input an expression: 30 + 40
>>> 
>>> choice
'30 + 40'
>>> 
>>> 
>>> 
>>> # source -> compiler (lexer and parser) --> executable
>>> # 30 + 40 -->                       -->  push 30 push 40 imul ret
>>> 
>>> 
>>> s
'42'
>>> s = '30 + 40'
>>> eval(s)
70
>>> 
>>> 

>>> 
>>> 




>>> 











>>> 


>>> 





>>> 


>>> ================================ RESTART ================================
>>> 
% 30 + 40
You asked for: 30 + 40
>>> ================================ RESTART ================================
>>> 
% 30 + 40
You asked for: 30 + 40
The result is: 70
>>> ================================ RESTART ================================
>>> 
% 30 + 40
70
>>> ================================ RESTART ================================
>>> 
% 30 + 40
70
% 55 - 5
50
% 
>>> ================================ RESTART ================================
>>> 
In [0]: 30 + 40
70
In [0]: 

Traceback (most recent call last):
  File "/Users/raymondhettinger/dropbox/Public/sj57/repl.py", line 8, in <module>
    request = raw_input(prompt)
EOFError: EOF when reading a line
>>> ================================ RESTART ================================
>>> 
In [0]: 30 + 40
Out[0]: 70

In [0]: 

Traceback (most recent call last):
  File "/Users/raymondhettinger/dropbox/Public/sj57/repl.py", line 8, in <module>
    request = raw_input(prompt)
EOFError: EOF when reading a line
>>> ================================ RESTART ================================
>>> 
In [0]: 30 + 40
Out[0]: 70

In [1]: 55 - 5
Out[1]: 50

In [2]: Out[0] + Out[1]
Out[2]: 120

In [3]: 

Traceback (most recent call last):
  File "/Users/raymondhettinger/dropbox/Public/sj57/repl.py", line 8, in <module>
    request = raw_input(prompt)
EOFError: EOF when reading a line
>>> ================================ RESTART ================================
>>> 
In [0]: 55 - 5
Out[0]: 50

In [1]: 30 + 40
Out[1]: 70

In [2]: quit
>>> pow(2, 5)
32
>>> help('pow')
Help on built-in function pow in module __builtin__:

pow(...)
    pow(x, y[, z]) -> number
    
    With two arguments, equivalent to x**y.  With three arguments,
    equivalent to (x**y) % z, but may be more efficient (e.g. for longs).

>>> 
>>> 
>>> request = '?pow'
>>> request.startswith('?')
True
>>> request[0]
'?'
>>> request[1:]
'pow'
>>> ================================ RESTART ================================
>>> 
In [0]: ?pow
Help on built-in function pow in module __builtin__:

pow(...)
    pow(x, y[, z]) -> number
    
    With two arguments, equivalent to x**y.  With three arguments,
    equivalent to (x**y) % z, but may be more efficient (e.g. for longs).

In [0]: 

Traceback (most recent call last):
  File "/Users/raymondhettinger/dropbox/Public/sj57/repl.py", line 8, in <module>
    request = raw_input(prompt)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/idlelib/PyShell.py", line 1367, in readline
    line = self._line_buffer or self.shell.readline()
KeyboardInterrupt
>>> 
>>> 
>>> 
>>> ================================ RESTART ================================
>>> 
Interface                      IP-Address      Status                Protocol

Loopback0                      51.51.51.51     Up                    Up

MgmtEth0/RSP0/CPU0/0           1.20.30.40      Up                    Up

MgmtEth0/RSP0/CPU0/1           unassigned      Down                  Down

MgmtEth0/RSP1/CPU0/0           unassigned      Up                    Up

MgmtEth0/RSP1/CPU0/1           unassigned      Down                  Down

HundredGigE0/1/0/0             unassigned      Shutdown              Down

HundredGigE0/1/0/1             unassigned      Shutdown              Down

TenGigE0/2/0/0                 unassigned      Down                  Down

TenGigE0/2/0/1                 unassigned      Down                  Down

TenGigE0/2/0/2                 unassigned      Down                  Down

TenGigE0/2/0/3                 unassigned      Down                  Down

TenGigE0/2/0/4                 unassigned      Down                  Down

TenGigE0/2/0/5                 unassigned      Down                  Down

TenGigE0/2/0/6                 unassigned      Down                  Down

TenGigE0/2/0/7                 unassigned      Down                  Down

GigabitEthernet0/3/0/0         121.1.1.1       Up                    Up

GigabitEthernet0/3/0/1         unassigned      Up                    Up

GigabitEthernet0/3/0/2         unassigned      Down                  Down

GigabitEthernet0/3/0/3         unassigned      Up                    Up

GigabitEthernet0/3/0/4         unassigned      Down                  Down

GigabitEthernet0/3/0/5         unassigned      Down                  Down

GigabitEthernet0/3/0/6         unassigned      Down                  Down

GigabitEthernet0/3/0/7         unassigned      Down                  Down

GigabitEthernet0/3/0/8         unassigned      Down                  Down

GigabitEthernet0/3/0/9         unassigned      Down                  Down

GigabitEthernet0/3/0/10        unassigned      Down                  Down

GigabitEthernet0/3/0/11        unassigned      Down                  Down

GigabitEthernet0/3/0/12        unassigned      Down                  Down

GigabitEthernet0/3/0/13        unassigned      Down                  Down

GigabitEthernet0/3/0/14        unassigned      Down                  Down

GigabitEthernet0/3/0/15        unassigned      Down                  Down

GigabitEthernet0/3/0/16        unassigned      Down                  Down

GigabitEthernet0/3/0/17        unassigned      Down                  Down

GigabitEthernet0/3/0/18        unassigned      Down                  Down

GigabitEthernet0/3/0/19        unassigned      Down                  Down

TenGigE0/3/1/0                 unassigned      Up                    Up

TenGigE0/3/1/1                 unassigned      Down                  Down

TenGigE0/3/1/2                 unassigned      Down                  Down

TenGigE0/3/1/3                 unassigned      Up                    Up

GigabitEthernet0/4/0/0         unassigned      Down                  Down

TenGigE0/4/0/0                 unassigned      Up                    Up

GigabitEthernet0/4/0/1         unassigned      Down                  Down

TenGigE0/4/0/1                 unassigned      Down                  Down

GigabitEthernet0/4/0/2         unassigned      Down                  Down

GigabitEthernet0/4/0/3         unassigned      Down                  Down

GigabitEthernet0/4/0/4         unassigned      Down                  Down

GigabitEthernet0/4/0/5         unassigned      Down                  Down

GigabitEthernet0/4/0/6         unassigned      Down                  Down

GigabitEthernet0/4/0/7         unassigned      Down                  Down

GigabitEthernet0/4/0/8         unassigned      Down                  Down

GigabitEthernet0/4/0/9         unassigned      Down                  Down

GigabitEthernet0/4/0/10        unassigned      Down                  Down

GigabitEthernet0/4/0/11        unassigned      Down                  Down

GigabitEthernet0/4/0/12        unassigned      Down                  Down

GigabitEthernet0/4/0/13        unassigned      Down                  Down

GigabitEthernet0/4/0/14        unassigned      Down                  Down

GigabitEthernet0/4/0/15        unassigned      Down                  Down

GigabitEthernet0/4/0/16        unassigned      Down                  Down

GigabitEthernet0/4/0/17        unassigned      Down                  Down

GigabitEthernet0/4/0/18        unassigned      Down                  Down

GigabitEthernet0/4/0/19        unassigned      Down                  Down

FortyGigE0/5/0/0               unassigned      Shutdown              Down

FortyGigE0/5/0/1               unassigned      Shutdown              Down

TenGigE0/5/1/0                 unassigned      Shutdown              Down

TenGigE0/5/1/1                 111.1.1.1       Up                    Up

GigabitEthernet0/7/0/0         unassigned      Down                  Down

GigabitEthernet0/7/0/1         unassigned      Down                  Down

GigabitEthernet0/7/0/2         unassigned      Down                  Down

GigabitEthernet0/7/0/3         unassigned      Down                  Down

GigabitEthernet0/7/0/4         unassigned      Down                  Down

GigabitEthernet0/7/0/5         unassigned      Down                  Down

GigabitEthernet0/7/0/6         unassigned      Down                  Down

GigabitEthernet0/7/0/7         unassigned      Down                  Down

GigabitEthernet0/7/0/8         unassigned      Down                  Down

GigabitEthernet0/7/0/9         unassigned      Down                  Down

GigabitEthernet0/7/0/10        unassigned      Down                  Down

GigabitEthernet0/7/0/11        unassigned      Down                  Down

GigabitEthernet0/7/0/12        unassigned      Down                  Down

GigabitEthernet0/7/0/13        unassigned      Down                  Down

GigabitEthernet0/7/0/14        unassigned      Down                  Down

GigabitEthernet0/7/0/15        unassigned      Up                    Up

GigabitEthernet0/7/0/16        unassigned      Down                  Down

GigabitEthernet0/7/0/17        unassigned      Down                  Down

GigabitEthernet0/7/0/18        unassigned      Down                  Down

GigabitEthernet0/7/0/19        unassigned      Down                  Down

GigabitEthernet0/7/0/20        unassigned      Down                  Down

GigabitEthernet0/7/0/21        unassigned      Down                  Down

GigabitEthernet0/7/0/22        unassigned      Down                  Down

GigabitEthernet0/7/0/23        unassigned      Down                  Down

GigabitEthernet0/7/0/24        unassigned      Down                  Down

GigabitEthernet0/7/0/25        unassigned      Down                  Down

GigabitEthernet0/7/0/26        unassigned      Down                  Down

GigabitEthernet0/7/0/27        unassigned      Down                  Down

GigabitEthernet0/7/0/28        unassigned      Down                  Down

GigabitEthernet0/7/0/29        unassigned      Down                  Down

GigabitEthernet0/7/0/30        unassigned      Down                  Down

GigabitEthernet0/7/0/31        unassigned      Down                  Down

GigabitEthernet0/7/0/32        unassigned      Down                  Down

GigabitEthernet0/7/0/33        unassigned      Down                  Down

GigabitEthernet0/7/0/34        unassigned      Down                  Down

GigabitEthernet0/7/0/35        unassigned      Down                  Down

GigabitEthernet0/7/0/36        unassigned      Down                  Down

GigabitEthernet0/7/0/37        unassigned      Down                  Down

GigabitEthernet0/7/0/38        unassigned      Down                  Down

GigabitEthernet0/7/0/39        unassigned      Down                  Down

>>> ================================ RESTART ================================
>>> 
['Interface', 'IP-Address', 'Status', 'Protocol']
['Loopback0', '51.51.51.51', 'Up', 'Up']
['MgmtEth0/RSP0/CPU0/0', '1.20.30.40', 'Up', 'Up']
['MgmtEth0/RSP0/CPU0/1', 'unassigned', 'Down', 'Down']
['MgmtEth0/RSP1/CPU0/0', 'unassigned', 'Up', 'Up']
['MgmtEth0/RSP1/CPU0/1', 'unassigned', 'Down', 'Down']
['HundredGigE0/1/0/0', 'unassigned', 'Shutdown', 'Down']
['HundredGigE0/1/0/1', 'unassigned', 'Shutdown', 'Down']
['TenGigE0/2/0/0', 'unassigned', 'Down', 'Down']
['TenGigE0/2/0/1', 'unassigned', 'Down', 'Down']
['TenGigE0/2/0/2', 'unassigned', 'Down', 'Down']
['TenGigE0/2/0/3', 'unassigned', 'Down', 'Down']
['TenGigE0/2/0/4', 'unassigned', 'Down', 'Down']
['TenGigE0/2/0/5', 'unassigned', 'Down', 'Down']
['TenGigE0/2/0/6', 'unassigned', 'Down', 'Down']
['TenGigE0/2/0/7', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/0', '121.1.1.1', 'Up', 'Up']
['GigabitEthernet0/3/0/1', 'unassigned', 'Up', 'Up']
['GigabitEthernet0/3/0/2', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/3', 'unassigned', 'Up', 'Up']
['GigabitEthernet0/3/0/4', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/5', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/6', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/7', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/8', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/9', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/10', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/11', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/12', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/13', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/14', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/15', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/16', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/17', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/18', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/3/0/19', 'unassigned', 'Down', 'Down']
['TenGigE0/3/1/0', 'unassigned', 'Up', 'Up']
['TenGigE0/3/1/1', 'unassigned', 'Down', 'Down']
['TenGigE0/3/1/2', 'unassigned', 'Down', 'Down']
['TenGigE0/3/1/3', 'unassigned', 'Up', 'Up']
['GigabitEthernet0/4/0/0', 'unassigned', 'Down', 'Down']
['TenGigE0/4/0/0', 'unassigned', 'Up', 'Up']
['GigabitEthernet0/4/0/1', 'unassigned', 'Down', 'Down']
['TenGigE0/4/0/1', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/2', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/3', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/4', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/5', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/6', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/7', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/8', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/9', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/10', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/11', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/12', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/13', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/14', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/15', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/16', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/17', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/18', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/4/0/19', 'unassigned', 'Down', 'Down']
['FortyGigE0/5/0/0', 'unassigned', 'Shutdown', 'Down']
['FortyGigE0/5/0/1', 'unassigned', 'Shutdown', 'Down']
['TenGigE0/5/1/0', 'unassigned', 'Shutdown', 'Down']
['TenGigE0/5/1/1', '111.1.1.1', 'Up', 'Up']
['GigabitEthernet0/7/0/0', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/1', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/2', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/3', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/4', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/5', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/6', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/7', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/8', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/9', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/10', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/11', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/12', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/13', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/14', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/15', 'unassigned', 'Up', 'Up']
['GigabitEthernet0/7/0/16', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/17', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/18', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/19', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/20', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/21', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/22', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/23', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/24', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/25', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/26', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/27', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/28', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/29', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/30', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/31', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/32', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/33', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/34', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/35', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/36', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/37', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/38', 'unassigned', 'Down', 'Down']
['GigabitEthernet0/7/0/39', 'unassigned', 'Down', 'Down']
>>> ================================ RESTART ================================
>>> 
>>> interface
'GigabitEthernet0/7/0/39'
>>> ipaddr
'unassigned'
>>> status
'Down'
>>> protocol
'Down'
>>> ================================ RESTART ================================
>>> 
Loopback0 51.51.51.51
MgmtEth0/RSP0/CPU0/0 1.20.30.40
MgmtEth0/RSP1/CPU0/0 unassigned
GigabitEthernet0/3/0/0 121.1.1.1
GigabitEthernet0/3/0/1 unassigned
GigabitEthernet0/3/0/3 unassigned
TenGigE0/3/1/0 unassigned
TenGigE0/3/1/3 unassigned
TenGigE0/4/0/0 unassigned
TenGigE0/5/1/1 111.1.1.1
GigabitEthernet0/7/0/15 unassigned
>>> 
>>> 
>>> 
>>> d = {}
>>> type(d)
<type 'dict'>
>>> d['raymond'] = 'red
SyntaxError: EOL while scanning string literal
>>> d['raymond'] = 'red'
>>> 
>>> 


>>> 


>>> 


>>> 


>>> 






















>>> d = {}
>>> d['raymond'] = 'red'
>>> d['rachel'] = 'blue'
>>> d['matthew'] = 'yellow'
>>> 
>>> d['rachel']
'blue'
>>> d['matthew']
'yellow'
>>> 
>>> d
{'matthew': 'yellow', 'rachel': 'blue', 'raymond': 'red'}
>>> 
>>> 'rachel' in d
True
>>> 'rachel' not in d
False
>>> 
>>> len(d)
3
>>> d['roger']

Traceback (most recent call last):
  File "<pyshell#312>", line 1, in <module>
    d['roger']
KeyError: 'roger'
>>> s = 'hello'
>>> s[10]

Traceback (most recent call last):
  File "<pyshell#314>", line 1, in <module>
    s[10]
IndexError: string index out of range
>>> 
>>> 
>>> 
>>> 
>>> # dicts are mutable
>>> d
{'matthew': 'yellow', 'rachel': 'blue', 'raymond': 'red'}
>>> d['raymond'] = 'crimson'
>>> d
{'matthew': 'yellow', 'rachel': 'blue', 'raymond': 'crimson'}
>>> 
>>> # dicts are mutable
>>> # dicts are unordered collections -- display in arbitrary order
>>> 
>>> # dicts are internally laid-out for high-speed key searches
>>> d['roger'] = 'yellow'
>>> 
>>> d
{'matthew': 'yellow', 'rachel': 'blue', 'roger': 'yellow', 'raymond': 'crimson'}
>>> # values do not have to be unique
>>> # keys do have to be unique
>>> 
>>> 
>>> d.keys()
['matthew', 'rachel', 'roger', 'raymond']
>>> d.values()
['yellow', 'blue', 'yellow', 'crimson']
>>> d.items()
[('matthew', 'yellow'), ('rachel', 'blue'), ('roger', 'yellow'), ('raymond', 'crimson')]
>>> s = d.items()
>>> s
[('matthew', 'yellow'), ('rachel', 'blue'), ('roger', 'yellow'), ('raymond', 'crimson')]
>>> s.sort()
>>> s
[('matthew', 'yellow'), ('rachel', 'blue'), ('raymond', 'crimson'), ('roger', 'yellow')]
>>> ================================ RESTART ================================
>>> 
>>> catalog
{u'bk103': {u'description': u'After the collapse of a nanotechnology \n      society in England, the young survivors lay the \n      foundation for a new society.', u'author': u'Corets, Eva', u'price': 5.95, u'title': u'Maeve Ascendant', u'publish_date': u'2000-11-17', u'genre': u'Fantasy'}, u'bk102': {u'description': u'A former architect battles corporate zombies, \n      an evil sorceress, and her own childhood to become queen \n      of the world.', u'author': u'Ralls, Kim', u'price': 5.95, u'title': u'Midnight Rain', u'publish_date': u'2000-12-16', u'genre': u'Fantasy'}, u'bk101': {u'description': u'An in-depth look at creating applications \n      with XML.', u'author': u'Gambardella, Matthew', u'price': 44.95, u'title': u"XML Developer's Guide", u'publish_date': u'2000-10-01', u'genre': u'Computer'}, u'bk107': {u'description': u'A deep sea diver finds true love twenty \n      thousand leagues beneath the sea.', u'author': u'Thurman, Paula', u'price': 4.95, u'title': u'Splish Splash', u'publish_date': u'2000-11-02', u'genre': u'Romance'}, u'bk106': {u'description': u'When Carla meets Paul at an ornithology \n      conference, tempers fly as feathers get ruffled.', u'author': u'Randall, Cynthia', u'price': 4.95, u'title': u'Lover Birds', u'publish_date': u'2000-09-02', u'genre': u'Romance'}, u'bk105': {u'description': u"The two daughters of Maeve, half-sisters, \n      battle one another for control of England. Sequel to \n      Oberon's Legacy.", u'author': u'Corets, Eva', u'price': 5.95, u'title': u'The Sundered Grail', u'publish_date': u'2001-09-10', u'genre': u'Fantasy'}, u'bk104': {u'description': u'In post-apocalypse England, the mysterious \n      agent known only as Oberon helps to create a new life \n      for the inhabitants of London. Sequel to Maeve \n      Ascendant.', u'author': u'Corets, Eva', u'price': 5.95, u'title': u"Oberon's Legacy", u'publish_date': u'2001-03-10', u'genre': u'Fantasy'}, u'bk109': {u'description': u'After an inadvertant trip through a Heisenberg\n      Uncertainty Device, James Salway discovers the problems \n      of being quantum.', u'author': u'Kress, Peter', u'price': 6.95, u'title': u'Paradox Lost', u'publish_date': u'2000-11-02', u'genre': u'Science Fiction'}, u'bk108': {u'description': u'An anthology of horror stories about roaches,\n      centipedes, scorpions  and other insects.', u'author': u'Knorr, Stefan', u'price': 4.95, u'title': u'Creepy Crawlies', u'publish_date': u'2000-12-06', u'genre': u'Horror'}, u'bk110': {u'description': u"Microsoft's .NET initiative is explored in \n      detail in this deep programmer's reference.", u'author': u"O'Brien, Tim", u'price': 36.95, u'title': u'Microsoft .NET: The Programming Bible', u'publish_date': u'2000-12-09', u'genre': u'Computer'}, u'bk111': {u'description': u'The Microsoft MSXML3 parser is covered in \n      detail, with attention to XML DOM interfaces, XSLT processing, \n      SAX and more.', u'author': u"O'Brien, Tim", u'price': 36.95, u'title': u'MSXML3: A Comprehensive Guide', u'publish_date': u'2000-12-01', u'genre': u'Computer'}, u'bk112': {u'description': u'Microsoft Visual Studio 7 is explored in depth,\n      looking at how Visual Basic, Visual C++, C#, and ASP+ are \n      integrated into a comprehensive development \n      environment.', u'author': u'Galos, Mike', u'price': 49.95, u'title': u'Visual Studio 7: A Comprehensive Guide', u'publish_date': u'2001-04-16', u'genre': u'Computer'}}
>>> type(catalog)
<type 'dict'>
>>> catalog['bk101']
{u'description': u'An in-depth look at creating applications \n      with XML.', u'author': u'Gambardella, Matthew', u'price': 44.95, u'title': u"XML Developer's Guide", u'publish_date': u'2000-10-01', u'genre': u'Computer'}
>>> catalog['bk101']['price']
44.95
>>> ================================ RESTART ================================
>>> 
bk103
bk102
bk101
bk107
bk106
bk105
bk104
bk109
bk108
bk110
bk111
bk112
>>> ================================ RESTART ================================
>>> 
44.95
36.95
36.95
49.95
>>> ================================ RESTART ================================
>>> 
5.95
5.95
5.95
5.95
>>> ================================ RESTART ================================
>>> 
44.95 XML Developer's Guide
36.95 Microsoft .NET: The Programming Bible
36.95 MSXML3: A Comprehensive Guide
49.95 Visual Studio 7: A Comprehensive Guide
>>> 
>>> 
>>> 
>>> print 'hello'
hello
>>> print "hello"
hello
>>> print '''hello'''
hello
>>> print """hello"""
hello
>>> 
>>> # The first quoting character seen IS the quoting character
>>> # the rest are just part of the string
>>> 
>>> print "Don't you forget about me."
Don't you forget about me.
>>> #    She said, "Hello Raymond!"
>>> 
>>> print 'She said, "Hello Raymond!"'
She said, "Hello Raymond!"
>>> #    She said, "Don't you forget about me."
>>> 
>>> print '''She said, "Don't you forget about me."'''
She said, "Don't you forget about me."
>>> print """She said, "Don't you forget about me.""""
SyntaxError: EOL while scanning string literal
>>> import this
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
>>> print """She said, "Don't you forget about me." """
She said, "Don't you forget about me." 
>>> 
>>> print 'Three\nblind\nmice\n'
Three
blind
mice

>>> print '''Three
blind
mice
'''
Three
blind
mice

>>> 
>>> print 'Don\'t you forget about me'
Don't you forget about me
>>> print 'Three\\nblind\\nmice\\n'
Three\nblind\nmice\n
>>> 
>>> print r'Three\nblind\nmice\n'
Three\nblind\nmice\n
>>> # C:\\My Documents and Settings\Raymond\developers.txt
>>> 
>>> print 'C:\\\\My Documents and Settings\\Raymond\\developers.txt'
C:\\My Documents and Settings\Raymond\developers.txt
>>> print r'C:\\My Documents and Settings\Raymond\developers.txt'
C:\\My Documents and Settings\Raymond\developers.txt
>>> 
>>> 
>>> print u'hello'
hello
>>> print 'hello'
hello
>>> 
>>> type(u'hello')
<type 'unicode'>
>>> type('hello')
<type 'str'>
>>> 
>>> print u'hello'
hello
>>> print 'hello'
hello
>>> print u'hello \u0664\u0662'
hello ٤٢
>>> 
>>> 
>>> print u'hello \N{snowman}\N{umbrella}\N{comet}'
hello ☃☂☄
>>> print u'hello \N{snowman}\N{umbrella}\N{comet}\N{copyright}'
SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 38-50: unknown Unicode character name
>>> print u'hello \N{snowman}\N{umbrella}\N{comet}\N{copyright sign}'
hello ☃☂☄©
>>> 
>>> 
>>> 
>>> 30 + 40
70
>>> 'hello' + 'world'
'helloworld'
>>> [10] + [20, 30]
[10, 20, 30]
>>> # The plus sign knows two things
>>> #   * precedence
>>> #   * who to call to do the work
>>> 
>>> (30).__add__(40)
70
>>> 30 + 40
70
>>> 'hello'.__add__('world')
'helloworld'
>>> [10].__add__([20, 30])
[10, 20, 30]
>>> dir(int)
['__abs__', '__add__', '__and__', '__class__', '__cmp__', '__coerce__', '__delattr__', '__div__', '__divmod__', '__doc__', '__float__', '__floordiv__', '__format__', '__getattribute__', '__getnewargs__', '__hash__', '__hex__', '__index__', '__init__', '__int__', '__invert__', '__long__', '__lshift__', '__mod__', '__mul__', '__neg__', '__new__', '__nonzero__', '__oct__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdiv__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'bit_length', 'conjugate', 'denominator', 'imag', 'numerator', 'real']
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__getslice__', '__gt__', '__hash__', '__init__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '_formatter_field_name_split', '_formatter_parser', 'capitalize', 'center', 'count', 'decode', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'index', 'isalnum', 'isalpha', 'isdigit', 'islower', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> ================================ RESTART ================================
>>> 
>>> d + e

Traceback (most recent call last):
  File "<pyshell#414>", line 1, in <module>
    d + e
TypeError: unsupported operand type(s) for +: 'instance' and 'instance'
>>> 
>>> 
>>> len('hello')
5
>>> len([10, 20, 30])
3
>>> 'hello'.__len__()
5
>>> [10, 20, 30].__len__()
3
>>> 
>>> len(d)

Traceback (most recent call last):
  File "<pyshell#422>", line 1, in <module>
    len(d)
AttributeError: Dog instance has no attribute '__len__'
>>> ================================ RESTART ================================
>>> 
>>> len(d)
42
>>> len(e)
42
>>> ================================ RESTART ================================
>>> 
>>> len(d)
4
>>> len(e)
5
>>> 
>>> [10, 20, 30][0]
10
>>> 'hello'[0]
'h'
>>> 'hello'.__getitem__(0)
'h'
>>> [10, 20, 30].__getitem__(0)
10
>>> d[2]

Traceback (most recent call last):
  File "<pyshell#432>", line 1, in <module>
    d[2]
AttributeError: Dog instance has no attribute '__getitem__'
>>> ================================ RESTART ================================
>>> 
>>> d[3]
333
>>> d[4]
444
>>> d[0]
0
>>> 'hello'[0]
'h'
>>> 'hello'[50]

Traceback (most recent call last):
  File "<pyshell#437>", line 1, in <module>
    'hello'[50]
IndexError: string index out of range
>>> 'hello'[5]

Traceback (most recent call last):
  File "<pyshell#438>", line 1, in <module>
    'hello'[5]
IndexError: string index out of range
>>> len('hello')
5
>>> len(d)
4
>>> d[9]
999
>>> ================================ RESTART ================================
>>> 
>>> ================================ RESTART ================================
>>> 
>>> d[3]
333
>>> d[9]

Traceback (most recent call last):
  File "<pyshell#443>", line 1, in <module>
    d[9]
  File "/Users/raymondhettinger/dropbox/Public/sj57/class_demo.py", line 17, in __getitem__
    raise IndexError('Oops, too far!')
IndexError: Oops, too far!
>>> d.__getitem__(3)
333
>>> d[3]
333
>>> 
>>> 
>>> 
>>> 
>>> 
>>> # All objects in Python have upto two ways to display themselves
>>> 
>>> # The external way -- for end users -- pretty
>>> # The internal way -- for programmers -- informative
>>> 
>>> # The external way is called __str__
>>> #  pronouced "stir" and is short for string
>>> 
>>> # The internal was is called __repr__
>>> #  pronounced "repper" and is short representation
>>> 
>>> # The print-keyword is for end users, so it uses __str__
>>> 
>>> # The interactive prompt is used by programmers, so it uses the __repr__
>>> 
>>> # Many times the __str__ and __repr__ are the same.
>>> 
>>> # By default, objects have and ugly str and repr.
>>> 
>>> 
>>> 10 + 4
14
>>> print 10 + 4
14
>>> 
>>> 'hello' + ' world'
'hello world'
>>> print 'hello' + ' world'
hello world
>>> 10
10
>>> '10'
'10'
>>> 
>>> 
>>> print 10
10
>>> print '10'
10
>>> 
>>> d
<__main__.Dog instance at 0x1016e4bd8>
>>> print d
<__main__.Dog instance at 0x1016e4bd8>
>>> ================================ RESTART ================================
>>> 
>>> d
<__main__.Dog instance at 0x1016e4758>
>>> print d
I am a dog named Fido
>>> print e
I am a dog named Buddy
>>> 
>>> 
>>> '''hello'''
'hello'
>>> "hello"
'hello'
>>> 
>>> Dog('Fido')
<__main__.Dog instance at 0x1016dfdd0>
>>> ================================ RESTART ================================
>>> 
>>> d
Dog(Fido)
>>> Dog(Fido)

Traceback (most recent call last):
  File "<pyshell#495>", line 1, in <module>
    Dog(Fido)
NameError: name 'Fido' is not defined
>>> Fido = 'Spot'
>>> Dog(Fido)
Dog(Spot)
>>> Dog(Fido)
Dog(Spot)
>>> 
>>> 
>>> 
>>> 'Fido'
'Fido'
>>> print 'Fido'
Fido
>>> ================================ RESTART ================================
>>> 
>>> d
Dog('Fido')
>>> Dog('Fido')
Dog('Fido')
>>> ================================ RESTART ================================
>>> 
>>> s = [d, e, d, Dog('Checkers'), Dog('Fido')]
>>> s
[<__main__.Dog instance at 0x1016e4758>, <__main__.Dog instance at 0x1016e43f8>, <__main__.Dog instance at 0x1016e4758>, <__main__.Dog instance at 0x1016e0098>, <__main__.Dog instance at 0x1016e4c68>]
>>> ================================ RESTART ================================
>>> 
>>> s = [d, e, d, Dog('Checkers'), Dog('Fido')]
>>> s
[Dog('Fido'), Dog('Buddy'), Dog('Fido'), Dog('Checkers'), Dog('Fido')]
>>> 
>>> 
>>> for x in [10, 20, 30]:
	print x

	
10
20
30
>>> s = [10, 20, 30]
>>> s[0]
10
>>> s[1]
20
>>> s[2]
30
>>> s[3]

Traceback (most recent call last):
  File "<pyshell#519>", line 1, in <module>
    s[3]
IndexError: list index out of range
>>> 
>>> d[0]
0
>>> d[1]
111
>>> d[2]
222
>>> d[3]
333
>>> d[4]

Traceback (most recent call last):
  File "<pyshell#525>", line 1, in <module>
    d[4]
  File "/Users/raymondhettinger/dropbox/Public/sj57/class_demo.py", line 17, in __getitem__
    raise IndexError('Oops, too far!')
IndexError: Oops, too far!
>>> 
>>> 
>>> for x in d:
	print x

	
0
111
222
333
>>> for x in e:
	print x

	
0
111
222
333
444
>>> # ITERABLE  -- IRRITATABLE
>>> min([10, 5, 20])
5
>>> min(d)
0
>>> max(d)
333
>>> sum(d)
666
>>> sum(e)
1110
>>> list(d)
[0, 111, 222, 333]
>>> set(e)
set([0, 444, 333, 222, 111])
>>> tuple(e)
(0, 111, 222, 333, 444)
>>> dict.fromkeys(e)
{0: None, 444: None, 333: None, 222: None, 111: None}
>>> 
>>> 
>>> d[3]
333
>>> 
>>> bin(49)
'0b110001'
>>> 
>>> dir(bin)
['__call__', '__class__', '__cmp__', '__delattr__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']
>>> 
>>> 
>>> bin(49)
'0b110001'
>>> bin.__call__(49)
'0b110001'
>>> d('fetch')

Traceback (most recent call last):
  File "<pyshell#554>", line 1, in <module>
    d('fetch')
AttributeError: Dog instance has no __call__ method
>>> ================================ RESTART ================================
>>> 
>>> d('fetch')
'Fido is fetching'
>>> d('owner')
'Raymond'
>>> d('vaccinations')

Traceback (most recent call last):
  File "<pyshell#557>", line 1, in <module>
    d('vaccinations')
  File "/Users/raymondhettinger/dropbox/Public/sj57/class_demo.py", line 32, in __call__
    raise ValueError('Unknown action')
ValueError: Unknown action
>>> 
>>> import math
>>> math.sqrt(9)
3.0
>>> math.sqrt(-9)

Traceback (most recent call last):
  File "<pyshell#561>", line 1, in <module>
    math.sqrt(-9)
ValueError: math domain error
>>> math.sqrt('hello')

Traceback (most recent call last):
  File "<pyshell#562>", line 1, in <module>
    math.sqrt('hello')
TypeError: a float is required
>>> 
